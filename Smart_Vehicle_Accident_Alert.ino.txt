#include <Wire.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <TinyGPSPlus.h>
#include "MPU6050.h"

MPU6050 mpu;
TinyGPSPlus gps;

HardwareSerial GPSSerial(1);

const char* ssid = "Your_WiFi_SSID";
const char* password = "Your_WiFi_Password";
const char* server = "https://api.thingspeak.com/update";
String apiKey = "YOUR_WRITE_API_KEY";

void setup() {
  Serial.begin(115200);
  GPSSerial.begin(9600, SERIAL_8N1, 16, 17);  // GPS RX, TX
  Wire.begin();
  WiFi.begin(ssid, password);

  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi!");

  mpu.initialize();
  if (!mpu.testConnection()) {
    Serial.println("MPU6050 not found!");
    while (1);
  }
}

void loop() {
  mpu.getAcceleration();
  int16_t ax, ay, az;
  mpu.getAcceleration(&ax, &ay, &az);

  // Calculate total force
  float gForce = sqrt(pow(ax, 2) + pow(ay, 2) + pow(az, 2)) / 16384.0;

  while (GPSSerial.available() > 0)
    gps.encode(GPSSerial.read());

  if (gForce > 3.5) {  // Threshold for accident detection
    if (gps.location.isValid()) {
      float latitude = gps.location.lat();
      float longitude = gps.location.lng();

      // Send data to ThingSpeak
      if (WiFi.status() == WL_CONNECTED) {
        HTTPClient http;
        String url = String(server) + "?api_key=" + apiKey +
                     "&field1=" + String(latitude) +
                     "&field2=" + String(longitude) +
                     "&field3=" + String(gForce);
        http.begin(url);
        int httpCode = http.GET();
        http.end();

        if (httpCode == 200) {
          Serial.println("Accident alert sent successfully!");
        } else {
          Serial.println("Failed to send data!");
        }
      }
    } else {
      Serial.println("Waiting for GPS signal...");
    }
  }

  delay(2000);
}
